service: serverless-python-example
app: serverless-python-example

frameworkVersion: '2'

package:
  individually: true
  exclude:
    - Makefile
    - Dockerfile*
    - "*.md"
    - .dockerignore
    - .github/**
    - tests/**
    - node_modules/**
    - .venv/**
    - config.yml
    - sample-config.yml
    - migrations
    - terraform
    - requirements.txt
    - pyproject.toml
    - poetry.lock
    - generator-config.yml
    - cli.py
    - alembic.ini
    - .pre-commit-config.yaml
    - .gitignore
    - .coverage
    - .mypy_cache/**
    - .pytest_cache/**
    - mypy.ini
    - package-lock.json
    - package.json
    - lambda/**

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "eu-central-1"}
  httpApi:
    cors: true


custom:
  pythonRequirements:
    pythonBin: python3
    dockerizePip: false
    usePoetry: true
    slim: true
  localstack:
    debug: true
    stages:
      - local
      - dev
    endpointFile: localstack_endpoints.json

functions:
  api:
    handler: src.handlers.handler.api
    timeout: 28
    events:
      - http:
          method: any
          path: /{proxy+}
      - http:
          method: get
          path: /
plugins:
  - serverless-python-requirements
  - serverless-localstack